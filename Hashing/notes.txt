
- Hashing is a method of sorting and indexing data. The idea behind hashing is to allow large amounts of data to be indexed using keys commonly created by formulas
- It is time efficient in case of SEARCH Operation
    - array O(logn)
    - linked list O(n)
    - Tree O(n)
    - hashing O(1)/O(n)

- hashing terminologies:
    - Hash function:  It is a function that can be used to map of arbitrary size to data of fixed size.
    - Key : Input data by a user
    - Hash value : A value that is returned by Hash Function
    - Hash Table : It is a data structure which implements an associative array abstract data type, a structure that can map keys to values
    - Collision : A collision occurs when two different keys to a hash function produce the same output.

- Properties of good Hash function:
    - It distributes hash values uniformly across hash tables
    - It has to use all the input data

- Collision resolution techniques: Watch video
    - Direct chaining: Implements the buckets as linked lists. Colliding elements are stored in this list.
    - Open addressing: Colliding elements are stored in other vacant buckets. During storage and lookup these are found through probing.
        - Linear probing: It places new key into closest following empty cell
        - Quadratic probing: Adding arbitrary quadratic polynomial to the index until an empty cell is found
        - Double hashing:  Interval between probes is computed by another hash function

- Hash table is full:
    - Direct chaining: Hash table will never be full.
    - Open addressing: Create 2X size of current Hash Table and recall hashing for current keys


- Pros and cons of collision resolution techniques  :
    - Direct chaining: 
        Pro: Hash table never gets full.
        Con: Huge Linked List causes performance leaks (Time complexity for search operation becomes O(n).) 
    
    - Open addressing: 
        Pro: Easy Implementation.
        Con: When Hash Table is full, creation of new Hash table affects performance (Time complexity for search operation becomes O(n).)
    

    - If the input size is known we always use “Open addressing”
    - If we perform deletion operation frequently we use “Direct Chaining”


- practical application:
    - Password verification.
    - File system